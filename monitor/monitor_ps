#!/usr/bin/env python
# -*- coding: utf-8 -*-
# author: jkk
# email: jinkkang@foxmail.com
 
#监控的进程
#当关键进程异常时会被拉起,拉起三次失败后，将发送邮件报警。
#check_period 监控周期,单位是秒
#check_ps 进程检查,返回值为0的commond/script表示进程running.
#start_ps 进程启动 


import os
import sys
import time
import zipfile
import datetime
import getpass
import logging 
import subprocess
from subprocess import Popen
import commands
import threading
 
#monitor 是否监控，on 表示监控，off 表示不监控
#check_period 监控周期,单位是秒，请填数字
#check_ps 关键进程检查命令,返回值为0的commond/script表示进程running，请确保该命令能正确检查进程
#start_ps 关进进程启动命令，请确保该命令能正确启动进程

process_mon = {
    "nginx": {
      "monitor": "on",
      "check_period": 3,
      "check_ps": "service nginx status |grep running",
      "start_ps": "service nginx restart"
    },
    "mysql": {
      "monitor": "on",
      "check_period": 3,
      "check_ps": "service mysqld status |grep running",
      "start_ps": "service mysqld restart"
    }  
     
}


def daemonize(stdin='/dev/null',stdout= '/dev/null', stderr= 'dev/null'):
    '''Fork当前进程为守护进程，重定向标准文件描述符
        （默认情况下定向到/dev/null）
    '''
    #Perform first fork.
    try:
        pid = os.fork()
        if pid > 0:
            sys.exit(0)  #first parent out
    except OSError, e:
        sys.stderr.write("fork #1 failed: (%d) %s\n" %(e.errno, e.strerror))
        sys.exit(1)

    #从母体环境脱离
    os.chdir("/")
    os.umask(0)
    os.setsid()
    #执行第二次fork
    try:
        pid = os.fork()
        if pid > 0:
            sys.exit(0) #second parent out
    except OSError, e:
        sys.stderr.write("fork #2 failed: (%d) %s]n" %(e.errno,e.strerror))
        sys.exit(1)

    #进程已经是守护进程了，重定向标准文件描述符
    for f in sys.stdout, sys.stderr: f.flush()
    si = file(stdin, 'r')
    so = file(stdout,'a+')
    se = file(stderr,'a+',0)
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())

#配置检查
def check_config():
    for i in process_mon:
        if process_mon[i]["monitor"] != "off" and process_mon[i]["monitor"] != "on":
            print  "the item %s monitor  configure  is wrong" %(i)
            os._exit(1)
        if not process_mon[i]["check_period"] or not float(process_mon[i]["check_period"]):
            print "the item %s check_period  configure  is wrong" %(i)
            os._exit(1)
        if not process_mon[i]["check_ps"]:
            print "the item %s check_ps  configure  is wrong" %(i)
            os._exit(1)
        if not process_mon[i]["start_ps"]:
            print "the item %s start_ps  configure  is wrong" %(i)
            os._exit(1)

#邮件报警
#def sendmail(reciver,content):
    

#监控函数
def monitor(check_period,check_ps,start_ps):
    while [ True ]:
        time.sleep(int(check_period))
        (status, output) = commands.getstatusoutput(check_ps)
        if status != 0:
            (restatus, reoutput) = commands.getstatusoutput(start_ps)
#监控列表

def start_monitor():
    monitor_list = []
    for i in process_mon:
        if process_mon[i]["monitor"] == "on":
            monitor_list.append(i)
    #监控进程
    for i in monitor_list:
        threading.Thread(target = monitor, args = (process_mon[i]["check_period"],process_mon[i]["check_ps"],process_mon[i]["start_ps"]), name = 'thread-monitor' + str(i)).start()

if __name__ == '__main__':
    daemonize('/dev/null','/dev/null','/dev/null')
    check_config()
    start_monitor()

